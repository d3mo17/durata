!function(t,e){"function"==typeof define&&define.amd?define("durata",e):"object"==typeof module&&module.exports?module.exports=e():t.Durata=e()}(this,function(){"use strict";var i=["update","complete"];function n(t,e){this[" easing"]="function"==typeof e?e:function(t){return t};this[" duration"]=parseInt(t)||1e3;this[" startTime"]=+new Date;this[" listener"]={complete:[]}}function a(t,e,i,r){this[" startValue"]=parseFloat(t);this[" targetValue"]=parseFloat(e);this[" diffValue"]=this[" targetValue"]-this[" startValue"];n.call(this,i,r)}function s(t,e,i,r){if(t.length!=e.length)throw new RangeError("The start values array has to have the same length as the target values array!");this[" startValues"]=t.map(function(t){return parseFloat(t)});this[" targetValues"]=e.map(function(t){return parseFloat(t)});this[" diffValues"]=this[" startValues"].map(function(t,e){return this[" targetValues"][e]-t},this);n.call(this,i,r)}function r(){var t=(+new Date-this[" startTime"])/this[" duration"];return 1<t?1:t}a.prototype.get=function(){return this[" startValue"]+this[" diffValue"]*this[" easing"](r.call(this))};s.prototype.get=function(){return this[" startValues"].map(function(t,e){return t+this[" diffValues"][e]*this[" easing"](r.call(this))},this)};a.prototype.getProgress=s.prototype.getProgress=r;a.prototype.on=s.prototype.on=function(t,e){if(-1===i.indexOf(t))throw new RangeError("Only following values are allowed for event type: "+i.join(", ")+"!");if("update"===t)requestAnimationFrame(function t(){e.call(this)||this.isComplete()||requestAnimationFrame(t.bind(this))}.bind(this));else{"complete"!==t||this[" listener"][t].length||requestAnimationFrame(function t(){this.isComplete()?function(t){this[" listener"][t].forEach(function(t){t.call(this)},this)}.call(this,"complete"):requestAnimationFrame(t.bind(this))}.bind(this));this[" listener"][t].push(e)}return this};a.prototype.isComplete=s.prototype.isComplete=function(){return this[" duration"]<=+new Date-this[" startTime"]};return{create:function(t,e,i,r){if(Array.isArray(t)&&Array.isArray(t))return new s(t,e,i,r);if(Array.isArray(t)||Array.isArray(t))throw new RangeError("Both values - start and target value have to be of the same type!");return new a(t,e,i,r)}}});"function"==typeof define&&define.amd&&define(["durata"],function(t){return t});